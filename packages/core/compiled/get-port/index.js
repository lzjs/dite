(function(){"use strict";var e={};!function(){e.d=function(t,o){for(var r in o){if(e.o(o,r)&&!e.o(t,r)){Object.defineProperty(t,r,{enumerable:true,get:o[r]})}}}}();!function(){e.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}();!function(){e.r=function(e){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}}();if(typeof e!=="undefined")e.ab=__dirname+"/";var t={};e.r(t);e.d(t,{default:function(){return getPorts},portNumbers:function(){return portNumbers}});var o=require("node:net");var r=require("node:os");class Locked extends Error{constructor(e){super(`${e} is locked`)}}const n={old:new Set,young:new Set};const i=1e3*15;const u=1024;const c=65535;let s;const getLocalHosts=()=>{const e=r.networkInterfaces();const t=new Set([undefined,"0.0.0.0"]);for(const o of Object.values(e)){for(const e of o){t.add(e.address)}}return t};const checkAvailablePort=e=>new Promise(((t,r)=>{const n=o.createServer();n.unref();n.on("error",r);n.listen(e,(()=>{const{port:e}=n.address();n.close((()=>{t(e)}))}))}));const getAvailablePort=async(e,t)=>{if(e.host||e.port===0){return checkAvailablePort(e)}for(const o of t){try{await checkAvailablePort({port:e.port,host:o})}catch(e){if(!["EADDRNOTAVAIL","EINVAL"].includes(e.code)){throw e}}}return e.port};const portCheckSequence=function*(e){if(e){yield*e}yield 0};async function getPorts(e){let t;let o=new Set;if(e){if(e.port){t=typeof e.port==="number"?[e.port]:e.port}if(e.exclude){const t=e.exclude;if(typeof t[Symbol.iterator]!=="function"){throw new TypeError("The `exclude` option must be an iterable.")}for(const e of t){if(typeof e!=="number"){throw new TypeError("Each item in the `exclude` option must be a number corresponding to the port you want excluded.")}if(!Number.isSafeInteger(e)){throw new TypeError(`Number ${e} in the exclude option is not a safe integer and can't be used`)}}o=new Set(t)}}if(s===undefined){s=setInterval((()=>{n.old=n.young;n.young=new Set}),i);if(s.unref){s.unref()}}const r=getLocalHosts();for(const i of portCheckSequence(t)){try{if(o.has(i)){continue}let t=await getAvailablePort({...e,port:i},r);while(n.old.has(t)||n.young.has(t)){if(i!==0){throw new Locked(i)}t=await getAvailablePort({...e,port:i},r)}n.young.add(t);return t}catch(e){if(!["EADDRINUSE","EACCES"].includes(e.code)&&!(e instanceof Locked)){throw e}}}throw new Error("No available ports found")}function portNumbers(e,t){if(!Number.isInteger(e)||!Number.isInteger(t)){throw new TypeError("`from` and `to` must be integer numbers")}if(e<u||e>c){throw new RangeError(`'from' must be between ${u} and ${c}`)}if(t<u||t>c){throw new RangeError(`'to' must be between ${u} and ${c}`)}if(e>t){throw new RangeError("`to` must be greater than or equal to `from`")}const generator=function*(e,t){for(let o=e;o<=t;o++){yield o}};return generator(e,t)}module.exports=t})();